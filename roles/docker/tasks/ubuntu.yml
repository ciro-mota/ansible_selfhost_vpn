- name: Ensure required packages are installed
  ansible.builtin.apt:
    name:
      - ca-certificates
      - curl
      - gnupg
      - software-properties-common
      - python3-pip
    state: present

- name: Install Docker via pip
  ansible.builtin.pip:
    name: docker
    executable: pip3
    extra_args: --break-system-packages

- name: Create directory for Docker's GPG key
  ansible.builtin.file:
    path: /etc/apt/keyrings
    state: directory
    mode: '0755'

- name: Add Docker's official GPG key
  ansible.builtin.get_url:
    url: https://download.docker.com/linux/ubuntu/gpg
    dest: /etc/apt/keyrings/docker.asc
    mode: a+r

- name: Retrieve dpkg architecture
  ansible.builtin.command: dpkg --print-architecture
  register: dpkg_arch_result
  changed_when: false

- name: Set dpkg architecture fact
  ansible.builtin.set_fact:
    dpkg_arch: "{{ dpkg_arch_result.stdout }}"

- name: Retrieve version codename dynamically
  ansible.builtin.shell: |
    set -o pipefail && grep 'VERSION_CODENAME=' /etc/os-release | cut -d'=' -f2
  args:
    executable: /bin/bash
  register: codename_result
  changed_when: false

- name: Set version codename fact dynamically
  ansible.builtin.set_fact:
    version_codename: "{{ codename_result.stdout }}"

- name: Add Docker to sources list
  ansible.builtin.lineinfile:
    path: /etc/apt/sources.list.d/docker.list
    line: "deb [arch={{ dpkg_arch }} signed-by=/etc/apt/keyrings/docker.asc] https://download.docker.com/linux/ubuntu {{ version_codename }} stable"
    create: true
    state: present
    mode: '0644'

- name: Install Docker and related packages
  ansible.builtin.apt:
    name: "{{ item }}"
    state: present
    update_cache: true
  loop:
    - docker-ce
    - docker-buildx-plugin
    - docker-compose-plugin

- name: Add Docker group
  ansible.builtin.group:
    name: docker
    state: present

- name: Add user to Docker group
  ansible.builtin.user:
    name: "{{ ansible_user }}"
    groups: docker
    append: true

- name: Enable and start Docker services
  ansible.builtin.systemd:
    name: "{{ item }}"
    enabled: true
    state: started
  loop:
    - docker.service
    - containerd.service
